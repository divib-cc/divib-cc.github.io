"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1227],{7648:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"Ai_JSX\u811a\u672c/ColorBlindSimulator","title":"ColorBlindSimulator","description":"Direct Download","source":"@site/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator.md","sourceDirName":"Ai_JSX\u811a\u672c","slug":"/Ai_JSX\u811a\u672c/ColorBlindSimulator","permalink":"/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AverageStrokesWidth","permalink":"/docs/Ai_JSX\u811a\u672c/AverageStrokesWidth"},"next":{"title":"cabalmain_1288_\u5730\u5740","permalink":"/docs/CABAL/CABAL_EP2_1288\u4e3b\u7a0b\u5e8f\u5730\u5740"}}');var o=e(4848),i=e(8453);const a={},c=void 0,l={},s=[];function u(r){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://rebrand.ly/colblindsim",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/Direct%20Link-ColorBlindSimulator.jsx-FF6900.svg",alt:"Direct"})})," ",(0,o.jsx)(n.a,{href:"https://bit.ly/2M0j95N",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/Download%20All-Zip%20archive-0088CC.svg",alt:"Download"})})]}),"\n",(0,o.jsxs)(n.p,{children:["Simulates color vision deficiency of 8 types. You can recolor objects or use only a preview. Adobe is limited to viewing two types in the ",(0,o.jsx)(n.code,{children:"View > Proof Setup"})," menu and cannot apply colors. The script supports: paths, compound paths, text, fills and strokes. You can change the gamma correction in ",(0,o.jsx)(n.code,{children:"CFG.gamma: 2.2"})," and activate the default preview ",(0,o.jsx)(n.code,{children:"CFG.defPreview: true"}),"."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Warning"}),(0,o.jsx)(n.br,{}),"\n","Unfortunately, the copied gradients are one swatch in the Illustrator. Manually break the link by changing the gradient twice with the ",(0,o.jsx)(n.code,{children:"Reverse Gradient"})," button."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"ColorBlindSimulator",src:e(1567).A+"",width:"750",height:"281"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"/*\r\n  ColorBlindSimulator.jsx for Adobe Illustrator\r\n  Description: Simulates color vision deficiency of 8 types for paths and text.\r\n  Adobe is limited to two settings in View > Proof Setup.\r\n  You can use only the preview or recolor your artwork\r\n  Date: April, 2022\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.1 Initial version\r\n  \r\n  ---\r\n  The Color Blind Simulation function is\r\n  copyright (c) 2000-2001 by Matthew Wickline and the\r\n  Human-Computer Interaction Resource Network ( http://hcirn.com/ ).\r\n  \r\n  It is used with the permission of Matthew Wickline and HCIRN,\r\n  and is freely available for non-commercial use. For commercial use, please\r\n  contact the Human-Computer Interaction Resource Network ( http://hcirn.com/ )\r\n  ---\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/osokin\r\n  - via FanTalks https://fantalks.io/r/sergey\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2018-2022 (Mac), 2022 (Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\n// Main function\r\nfunction main() {\r\n  var SCRIPT = {\r\n        name: 'Color Blind Simulator',\r\n        version: 'v.0.1'\r\n      },\r\n      CFG = {\r\n        list: ['Protanomaly', 'Protanopia', 'Deuteranomaly', 'Deuteranopia', // Don't change names\r\n                'Tritanomaly', 'Tritanopia', 'Achromatomaly', 'Achromatopsia'],\r\n        gamma: 2.2, // Gamma correction\r\n        defPreview: false,\r\n        dlgOpacity: .96 // UI window opacity. Range 0-1\r\n      },\r\n      R_BLIND = {\r\n        'protan': { 'cpu': 0.735, 'cpv': 0.265, 'am': 1.273463, 'ayi': -0.073894 },\r\n        'deutan': { 'cpu': 1.14, 'cpv': -0.14, 'am': 0.968437, 'ayi': 0.003331 },\r\n        'tritan': { 'cpu': 0.171, 'cpv': -0.003, 'am': 0.062921, 'ayi': 0.292119 },\r\n      };\r\n\r\n  if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again');\r\n    return;\r\n  }\r\n\r\n  if (selection.length == 0 || selection.typename == 'TextRange') {\r\n    alert('Error\\nPlease, select one or more paths');\r\n    return;\r\n  }\r\n\r\n  var funcBlind = {\r\n        'protanopia'    : function(e) { return blind(e, R_BLIND.protan, CFG.gamma); },\r\n        'protanomaly'   : function(e) { return anomylize(e, blind(e, R_BLIND.protan, CFG.gamma)); },\r\n        'deuteranopia'  : function(e) { return blind(e, R_BLIND.deutan, CFG.gamma); },\r\n        'deuteranomaly' : function(e) { return anomylize(e, blind(e, R_BLIND.deutan, CFG.gamma)); },\r\n        'tritanopia'    : function(e) { return blind(e, R_BLIND.tritan, CFG.gamma); },\r\n        'tritanomaly'   : function(e) { return anomylize(e, blind(e, R_BLIND.tritan, CFG.gamma)); },\r\n        'achromatopsia' : function(e) { return monochrome(e); },\r\n        'achromatomaly' : function(e) { return anomylize(e, monochrome(e)); }\r\n      };\r\n\r\n  var items = getItems(selection),\r\n      isUndo = false;\r\n\r\n  // Dialog\r\n  var dialog = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      dialog.orientation = 'column';\r\n      dialog.alignChildren = ['fill', 'fill'];\r\n      dialog.opacity = CFG.dlgOpacity;\r\n\r\n  // Dropdown\r\n  dialog.add('statictext', undefined, 'Select the type of color vision for recolor');\r\n  var blindType = dialog.add('dropdownlist', undefined, CFG.list);\r\n      blindType.selection = 1; // CFG.list index\r\n\r\n  var btns = dialog.add('group');\r\n  var isPreview = btns.add('checkbox', undefined, 'Preview');\r\n      isPreview.value = CFG.defPreview;\r\n  \r\n  // CC 2020 v24.3 has the problem of undoing text changes\r\n  if (parseInt(app.version) == 24 && isContainsText(items)) {\r\n    dialog.add('statictext', undefined, \"Text color preview doesn't work in CC 2020\");\r\n    isPreview.enabled = false;\r\n  }\r\n\r\n  var cancel = btns.add('button', undefined, 'Cancel', {name: 'cancel'});\r\n  var ok = btns.add('button', undefined, 'Ok', {name: 'ok'});\r\n\r\n  var copyright = dialog.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold/');\r\n  });\r\n\r\n  if (isPreview.value) preview();\r\n  isPreview.onClick = preview;\r\n  blindType.onChange = preview;\r\n\r\n  cancel.onClick = dialog.close;\r\n  ok.onClick = okClick;\r\n\r\n  dialog.onClose = function () {\r\n    try {\r\n      if (isUndo) {\r\n        undo();\r\n        redraw();\r\n        isUndo = false;\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  function preview() {\r\n    if (!isPreview.enabled) return;\r\n    try {\r\n      if (isPreview.value) {\r\n        if (isUndo) undo();\r\n        // else isUndo = true;\r\n        start();\r\n        redraw();\r\n      } else if (isUndo) {\r\n          undo();\r\n          redraw();\r\n          isUndo = false;\r\n        }\r\n    } catch (e) {}\r\n  }\r\n\r\n  function okClick() {\r\n    if (isPreview.value && isUndo) undo();\r\n    start();\r\n    isUndo = false;\r\n    dialog.close();\r\n  }\r\n\r\n  function start() {\r\n    // Get the key for the function\r\n    var type = blindType.selection.toString().toLowerCase();\r\n\r\n    for (var i = 0, len = items.length; i < len; i++) {\r\n      var currItem = items[i];\r\n\r\n      if (!hasColor(currItem, 'fillColor') && !hasColor(currItem, 'strokeColor'))\r\n        continue;\r\n\r\n      if (isText(currItem))\r\n        currItem = currItem.textRange;\r\n      \r\n      if (hasColor(currItem, 'fillColor'))\r\n        recolor(currItem, 'fillColor', funcBlind[type]);\r\n\r\n      if (hasColor(currItem, 'strokeColor'))\r\n        recolor(currItem, 'strokeColor', funcBlind[type]);\r\n\r\n      isUndo = true; // If at least one object has been changed\r\n    }\r\n  }\r\n\r\n  dialog.center();\r\n  dialog.show();\r\n}\r\n\r\n// Get simulated RGB\r\nfunction blind(rgb, type, gamma) {\r\n  if (gamma == undefined) gamma = 2.2;\r\n\r\n  var wx = 0.312713,\r\n      wy = 0.329016,\r\n      wz = 0.358271;\r\n\r\n  var c = {};\r\n  c.r = Math.pow(rgb[0] / 255, gamma);\r\n  c.g = Math.pow(rgb[1] / 255, gamma);\r\n  c.b = Math.pow(rgb[2] / 255, gamma);\r\n\r\n  rgb2xyz(c);\r\n\r\n  var sum_xyz = c.x + c.y + c.z;\r\n  c.u = 0;\r\n  c.v = 0;\r\n\r\n  if (sum_xyz != 0) {\r\n    c.u = c.x / sum_xyz;\r\n    c.v = c.y / sum_xyz;\r\n  }\r\n\r\n  // Calculate difference between sim color and neutral color\r\n  var nx = wx * c.y / wy,\r\n      nz = wz * c.y / wy,\r\n      clm, s = {},\r\n      d = {};\r\n  d.y = 0;\r\n\r\n  if (c.u < type.cpu) {\r\n    clm = (type.cpv - c.v) / (type.cpu - c.u);\r\n  } else {\r\n    clm = (c.v - type.cpv) / (c.u - type.cpu);\r\n  }\r\n\r\n  var clyi = c.v - c.u * clm;\r\n  d.u = (type.ayi - clyi) / (clm - type.am);\r\n  d.v = (clm * d.u) + clyi;\r\n\r\n  s.x = d.u * c.y / d.v;\r\n  s.y = c.y;\r\n  s.z = (1 - (d.u + d.v)) * c.y / d.v;\r\n  xyz2rgb(s);\r\n\r\n  d.x = nx - s.x;\r\n  d.z = nz - s.z;\r\n  xyz2rgb(d);\r\n\r\n  var adj_r = d.r ? ((s.r < 0 ? 0 : 1) - s.r) / d.r : 0,\r\n      adj_g = d.g ? ((s.g < 0 ? 0 : 1) - s.g) / d.g : 0,\r\n      adj_b = d.b ? ((s.b < 0 ? 0 : 1) - s.b) / d.b : 0;\r\n\r\n  var adjust = Math.max(((adj_r > 1 || adj_r < 0) ? 0 : adj_r), ((adj_g > 1 || adj_g < 0) ? 0 : adj_g), ((adj_b > 1 || adj_b < 0) ? 0 : adj_b));\r\n\r\n  // Shift proportionally\r\n  s.r = s.r + (adjust * d.r);\r\n  s.g = s.g + (adjust * d.g);\r\n  s.b = s.b + (adjust * d.b);\r\n\r\n  // Apply gamma and clamp simulated color\r\n  function z(e) {\r\n    return 255 * (e <= 0 ? 0 : (e >= 1 ? 1 : Math.pow(e, 1 / gamma)));\r\n  }\r\n\r\n  return [Math.round(z(s.r)), Math.round(z(s.g)), Math.round(z(s.b))];\r\n}\r\n\r\n// Convert RGB to XYZ color space\r\nfunction rgb2xyz(obj) {\r\n  obj.x = (0.430574 * obj.r + 0.341550 * obj.g + 0.178325 * obj.b);\r\n  obj.y = (0.222015 * obj.r + 0.706655 * obj.g + 0.071330 * obj.b);\r\n  obj.z = (0.020183 * obj.r + 0.129553 * obj.g + 0.939180 * obj.b);\r\n\r\n  return obj;\r\n}\r\n\r\n// Convert XYZ to RGB color space\r\nfunction xyz2rgb(obj) {\r\n  obj.r = (3.063218 * obj.x - 1.393325 * obj.y - 0.475802 * obj.z);\r\n  obj.g = (-0.969243 * obj.x + 1.875966 * obj.y + 0.041555 * obj.z);\r\n  obj.b = (0.067871 * obj.x - 0.228834 * obj.y + 1.069251 * obj.z);\r\n\r\n  return obj;\r\n}\r\n\r\n// If long-wavelength cones (L-cones) is defective\r\nfunction anomylize(a, b) {\r\n  var v = 1.75,\r\n      d = v * 1 + 1;\r\n\r\n  return [(v * b[0] + a[0] * 1) / d, (v * b[1] + a[1] * 1) / d, (v * b[2] + a[2] * 1) / d];\r\n}\r\n\r\n// Convert to monochrome\r\nfunction monochrome(rgb) {\r\n  var z = Math.round(rgb[0] * .299 + rgb[1] * .587 + rgb[2] * .114);\r\n\r\n  return [z, z, z];\r\n}\r\n\r\n// Get single items\r\nfunction getItems(collection) {\r\n  var out = [];\r\n\r\n  for (var i = 0, len = collection.length; i < len; i++) {\r\n    var item = collection[i];\r\n    if (item.pageItems && item.pageItems.length) {\r\n      out = [].concat(out, getItems(item.pageItems));\r\n    } else if (/compound/i.test(item.typename) && item.pathItems.length) {\r\n      out = [].concat(out, getItems(item.pathItems));\r\n    } else if (/pathitem|text/i.test(item.typename)) {\r\n      out.push(item);\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n// Check if the object has color\r\nfunction hasColor(item, attr) {\r\n  if (!isText(item) && /fill/i.test(attr) && !item.filled )\r\n    return false;\r\n  if (!isText(item) && /stroke/i.test(attr) && !item.stroked)\r\n    return false;\r\n\r\n  if(isText(item)) item = item.characters[0].characterAttributes;\r\n  \r\n  var type = item[attr].typename;\r\n\r\n  if (/rgb|cmyk|gray|spot|gradient/i.test(type))\r\n    return true;\r\n\r\n  return false;\r\n}\r\n\r\n// Does the array contain TextFrame\r\nfunction isContainsText(collection) {\r\n  for (var i = 0, len = collection.length; i < len; i++) {\r\n    if (/text/i.test(collection[i].typename)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// Check the TextFrame\r\nfunction isText(item) {\r\n  return (/text/i.test(item.typename));\r\n}\r\n\r\n// Change the original color to the simulated color\r\nfunction recolor(item, attr, func) {\r\n  var isRgb = activeDocument.documentColorSpace == DocumentColorSpace.RGB,\r\n      fill = item[attr],\r\n      c = {}; // Color\r\n\r\n  if (/gradient/i.test(fill)) { // Gradient color\r\n    for (i = 0, len = fill.gradient.gradientStops.length; i < len; i++) {\r\n      var gStop = fill.gradient.gradientStops[i];\r\n      c = setBlindColor(gStop.color, func);\r\n      gStop.color = c;\r\n      c = {};\r\n    }\r\n  } else { // Solid color\r\n    c = setBlindColor(fill, func);\r\n    item[attr] = c;\r\n  }\r\n\r\n  // Calc\r\n  function setBlindColor(src, func) {\r\n    var c = getOriginalColor(src, isRgb),\r\n        rgb = [], cmyk = [];\r\n\r\n    if (isRgb) {\r\n      rgb = func([c.red, c.green, c.blue]); // Simulate\r\n    } else {\r\n      rgb = cmyk2rgb([c.cyan, c.magenta, c.yellow, c.black]);\r\n      rgb = func(rgb); // Simulate\r\n      cmyk = rgb2cmyk(rgb);\r\n    }\r\n    return isRgb ? setRGBColor(rgb) : setCMYKColor(cmyk);\r\n  }\r\n}\r\n\r\n// Get single color\r\nfunction getOriginalColor(c, isRgb) {\r\n  var nc = {}; // New color\r\n  switch (c.typename) {\r\n    case 'SpotColor':\r\n      if (c.tint === 100) {\r\n        return getOriginalColor(c.spot.color, isRgb);\r\n      } else {\r\n        var s = getOriginalColor(c.spot.color, isRgb);\r\n        var raw = isRgb ? [s.red, s.green, s.blue] : cmyk2rgb([s.cyan, s.magenta, s.yellow, s.black]);\r\n        raw = lerp(raw, [255, 255, 255], 1 - c.tint / 100);\r\n        nc = isRgb ? setRGBColor(raw) : setCMYKColor(rgb2cmyk(raw));\r\n        return nc;\r\n      }\r\n    case 'GrayColor':\r\n      if (isRgb) {\r\n        var raw = gray2rgb(c.gray);\r\n        nc = setRGBColor(raw);\r\n      } else {\r\n        nc = setCMYKColor([0, 0, 0, c.gray]);\r\n      }\r\n      return nc;\r\n    default:\r\n      return c;\r\n  }\r\n}\r\n\r\n// Linear interpolation\r\nfunction lerp(from, to, value) {\r\n  var out = [];\r\n  for (var i = 0; i < from.length; i++) {\r\n    out.push(from[i] + (to[i] - from[i]) * value);\r\n  }\r\n  return out;\r\n}\r\n\r\n// Convert CMYK to RGB color space\r\nfunction cmyk2rgb(cmyk) {\r\n  return convertColor('CMYK', 'RGB', cmyk);\r\n}\r\n\r\n// Convert RGB to CMYK color space\r\nfunction rgb2cmyk(rgb) {\r\n  return convertColor('RGB', 'CMYK', rgb);\r\n}\r\n\r\n// Convert GrayScale to RGB color space\r\nfunction gray2rgb(gray) {\r\n  return convertColor('GrayScale', 'RGB', [gray]);\r\n}\r\n\r\n// Convert color via native converter\r\nfunction convertColor(src, dest, srcColor) {\r\n  return app.convertSampleColor(ImageColorSpace[src], srcColor, ImageColorSpace[dest], ColorConvertPurpose.defaultpurpose);\r\n}\r\n\r\n// Generate solid RGB color\r\nfunction setRGBColor(rgb) {\r\n  var c = new RGBColor();\r\n  c.red = rgb[0];\r\n  c.green = rgb[1];\r\n  c.blue = rgb[2];\r\n  return c;\r\n}\r\n\r\n// Generate solid CMYK color\r\nfunction setCMYKColor(cmyk) {\r\n  var c = new CMYKColor();\r\n  c.cyan = cmyk[0];\r\n  c.magenta = cmyk[1];\r\n  c.yellow = cmyk[2];\r\n  c.black = cmyk[3];\r\n  return c;\r\n}\r\n\r\n// Open link in browser\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\n// Run script\r\ntry {\r\n  main();\r\n} catch (e) {}```\n"})})]})}function d(r={}){const{wrapper:n}={...(0,i.R)(),...r.components};return n?(0,o.jsx)(n,{...r,children:(0,o.jsx)(u,{...r})}):u(r)}},1567:(r,n,e)=>{e.d(n,{A:()=>t});const t=e.p+"assets/images/ColorBlindSimulator-7399bcb49b87d4c5bd8f762e36fefae7.gif"},8453:(r,n,e)=>{e.d(n,{R:()=>a,x:()=>c});var t=e(6540);const o={},i=t.createContext(o);function a(r){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function c(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:a(r.components),t.createElement(i.Provider,{value:n},r.children)}}}]);