"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1227],{7648:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"Ai_JSX\u811a\u672c/ColorBlindSimulator","title":"ColorBlindSimulator","description":"Direct Download","source":"@site/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator.md","sourceDirName":"Ai_JSX\u811a\u672c","slug":"/Ai_JSX\u811a\u672c/ColorBlindSimulator","permalink":"/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Ai_JSX\u811a\u672c/ColorBlindSimulator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AverageStrokesWidth","permalink":"/docs/Ai_JSX\u811a\u672c/AverageStrokesWidth"},"next":{"title":"cabalmain_1288_\u5730\u5740","permalink":"/docs/CABAL/CABAL_EP2_1288\u4e3b\u7a0b\u5e8f\u5730\u5740"}}');var r=t(4848),i=t(8453);const a={},c=void 0,l={},s=[];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"https://rebrand.ly/colblindsim",children:(0,r.jsx)(e.img,{src:"https://img.shields.io/badge/Direct%20Link-ColorBlindSimulator.jsx-FF6900.svg",alt:"Direct"})})," ",(0,r.jsx)(e.a,{href:"https://bit.ly/2M0j95N",children:(0,r.jsx)(e.img,{src:"https://img.shields.io/badge/Download%20All-Zip%20archive-0088CC.svg",alt:"Download"})})]}),"\n",(0,r.jsxs)(e.p,{children:["Simulates color vision deficiency of 8 types. You can recolor objects or use only a preview. Adobe is limited to viewing two types in the ",(0,r.jsx)(e.code,{children:"View > Proof Setup"})," menu and cannot apply colors. The script supports: paths, compound paths, text, fills and strokes. You can change the gamma correction in ",(0,r.jsx)(e.code,{children:"CFG.gamma: 2.2"})," and activate the default preview ",(0,r.jsx)(e.code,{children:"CFG.defPreview: true"}),"."]}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Warning"}),(0,r.jsx)(e.br,{}),"\n","Unfortunately, the copied gradients are one swatch in the Illustrator. Manually break the link by changing the gradient twice with the ",(0,r.jsx)(e.code,{children:"Reverse Gradient"})," button."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"ColorBlindSimulator",src:t(4525).A+"",width:"750",height:"281"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"/*\n  ColorBlindSimulator.jsx for Adobe Illustrator\n  Description: Simulates color vision deficiency of 8 types for paths and text.\n  Adobe is limited to two settings in View > Proof Setup.\n  You can use only the preview or recolor your artwork\n  Date: April, 2022\n  Author: Sergey Osokin, email: hi@sergosokin.ru\n\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\n\n  Release notes:\n  0.1 Initial version\n  \n  ---\n  The Color Blind Simulation function is\n  copyright (c) 2000-2001 by Matthew Wickline and the\n  Human-Computer Interaction Resource Network ( http://hcirn.com/ ).\n  \n  It is used with the permission of Matthew Wickline and HCIRN,\n  and is freely available for non-commercial use. For commercial use, please\n  contact the Human-Computer Interaction Resource Network ( http://hcirn.com/ )\n  ---\n\n  Donate (optional):\n  If you find this script helpful, you can buy me a coffee\n  - via Buymeacoffee: https://www.buymeacoffee.com/osokin\n  - via FanTalks https://fantalks.io/r/sergey\n  - via DonatePay https://new.donatepay.ru/en/@osokin\n  - via YooMoney https://yoomoney.ru/to/410011149615582\n\n  NOTICE:\n  Tested with Adobe Illustrator CC 2018-2022 (Mac), 2022 (Win).\n  This script is provided \"as is\" without warranty of any kind.\n  Free to use, not for sale\n\n  Released under the MIT license\n  http://opensource.org/licenses/mit-license.php\n\n  Check my other scripts: https://github.com/creold\n*/\n\n//@target illustrator\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\n\n// Main function\nfunction main() {\n  var SCRIPT = {\n        name: 'Color Blind Simulator',\n        version: 'v.0.1'\n      },\n      CFG = {\n        list: ['Protanomaly', 'Protanopia', 'Deuteranomaly', 'Deuteranopia', // Don't change names\n                'Tritanomaly', 'Tritanopia', 'Achromatomaly', 'Achromatopsia'],\n        gamma: 2.2, // Gamma correction\n        defPreview: false,\n        dlgOpacity: .96 // UI window opacity. Range 0-1\n      },\n      R_BLIND = {\n        'protan': { 'cpu': 0.735, 'cpv': 0.265, 'am': 1.273463, 'ayi': -0.073894 },\n        'deutan': { 'cpu': 1.14, 'cpv': -0.14, 'am': 0.968437, 'ayi': 0.003331 },\n        'tritan': { 'cpu': 0.171, 'cpv': -0.003, 'am': 0.062921, 'ayi': 0.292119 },\n      };\n\n  if (!documents.length) {\n    alert('Error\\nOpen a document and try again');\n    return;\n  }\n\n  if (selection.length == 0 || selection.typename == 'TextRange') {\n    alert('Error\\nPlease, select one or more paths');\n    return;\n  }\n\n  var funcBlind = {\n        'protanopia'    : function(e) { return blind(e, R_BLIND.protan, CFG.gamma); },\n        'protanomaly'   : function(e) { return anomylize(e, blind(e, R_BLIND.protan, CFG.gamma)); },\n        'deuteranopia'  : function(e) { return blind(e, R_BLIND.deutan, CFG.gamma); },\n        'deuteranomaly' : function(e) { return anomylize(e, blind(e, R_BLIND.deutan, CFG.gamma)); },\n        'tritanopia'    : function(e) { return blind(e, R_BLIND.tritan, CFG.gamma); },\n        'tritanomaly'   : function(e) { return anomylize(e, blind(e, R_BLIND.tritan, CFG.gamma)); },\n        'achromatopsia' : function(e) { return monochrome(e); },\n        'achromatomaly' : function(e) { return anomylize(e, monochrome(e)); }\n      };\n\n  var items = getItems(selection),\n      isUndo = false;\n\n  // Dialog\n  var dialog = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\n      dialog.orientation = 'column';\n      dialog.alignChildren = ['fill', 'fill'];\n      dialog.opacity = CFG.dlgOpacity;\n\n  // Dropdown\n  dialog.add('statictext', undefined, 'Select the type of color vision for recolor');\n  var blindType = dialog.add('dropdownlist', undefined, CFG.list);\n      blindType.selection = 1; // CFG.list index\n\n  var btns = dialog.add('group');\n  var isPreview = btns.add('checkbox', undefined, 'Preview');\n      isPreview.value = CFG.defPreview;\n  \n  // CC 2020 v24.3 has the problem of undoing text changes\n  if (parseInt(app.version) == 24 && isContainsText(items)) {\n    dialog.add('statictext', undefined, \"Text color preview doesn't work in CC 2020\");\n    isPreview.enabled = false;\n  }\n\n  var cancel = btns.add('button', undefined, 'Cancel', {name: 'cancel'});\n  var ok = btns.add('button', undefined, 'Ok', {name: 'ok'});\n\n  var copyright = dialog.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\n      copyright.justify = 'center';\n\n  copyright.addEventListener('mousedown', function () {\n    openURL('https://github.com/creold/');\n  });\n\n  if (isPreview.value) preview();\n  isPreview.onClick = preview;\n  blindType.onChange = preview;\n\n  cancel.onClick = dialog.close;\n  ok.onClick = okClick;\n\n  dialog.onClose = function () {\n    try {\n      if (isUndo) {\n        undo();\n        redraw();\n        isUndo = false;\n      }\n    } catch (e) {}\n  }\n\n  function preview() {\n    if (!isPreview.enabled) return;\n    try {\n      if (isPreview.value) {\n        if (isUndo) undo();\n        // else isUndo = true;\n        start();\n        redraw();\n      } else if (isUndo) {\n          undo();\n          redraw();\n          isUndo = false;\n        }\n    } catch (e) {}\n  }\n\n  function okClick() {\n    if (isPreview.value && isUndo) undo();\n    start();\n    isUndo = false;\n    dialog.close();\n  }\n\n  function start() {\n    // Get the key for the function\n    var type = blindType.selection.toString().toLowerCase();\n\n    for (var i = 0, len = items.length; i < len; i++) {\n      var currItem = items[i];\n\n      if (!hasColor(currItem, 'fillColor') && !hasColor(currItem, 'strokeColor'))\n        continue;\n\n      if (isText(currItem))\n        currItem = currItem.textRange;\n      \n      if (hasColor(currItem, 'fillColor'))\n        recolor(currItem, 'fillColor', funcBlind[type]);\n\n      if (hasColor(currItem, 'strokeColor'))\n        recolor(currItem, 'strokeColor', funcBlind[type]);\n\n      isUndo = true; // If at least one object has been changed\n    }\n  }\n\n  dialog.center();\n  dialog.show();\n}\n\n// Get simulated RGB\nfunction blind(rgb, type, gamma) {\n  if (gamma == undefined) gamma = 2.2;\n\n  var wx = 0.312713,\n      wy = 0.329016,\n      wz = 0.358271;\n\n  var c = {};\n  c.r = Math.pow(rgb[0] / 255, gamma);\n  c.g = Math.pow(rgb[1] / 255, gamma);\n  c.b = Math.pow(rgb[2] / 255, gamma);\n\n  rgb2xyz(c);\n\n  var sum_xyz = c.x + c.y + c.z;\n  c.u = 0;\n  c.v = 0;\n\n  if (sum_xyz != 0) {\n    c.u = c.x / sum_xyz;\n    c.v = c.y / sum_xyz;\n  }\n\n  // Calculate difference between sim color and neutral color\n  var nx = wx * c.y / wy,\n      nz = wz * c.y / wy,\n      clm, s = {},\n      d = {};\n  d.y = 0;\n\n  if (c.u < type.cpu) {\n    clm = (type.cpv - c.v) / (type.cpu - c.u);\n  } else {\n    clm = (c.v - type.cpv) / (c.u - type.cpu);\n  }\n\n  var clyi = c.v - c.u * clm;\n  d.u = (type.ayi - clyi) / (clm - type.am);\n  d.v = (clm * d.u) + clyi;\n\n  s.x = d.u * c.y / d.v;\n  s.y = c.y;\n  s.z = (1 - (d.u + d.v)) * c.y / d.v;\n  xyz2rgb(s);\n\n  d.x = nx - s.x;\n  d.z = nz - s.z;\n  xyz2rgb(d);\n\n  var adj_r = d.r ? ((s.r < 0 ? 0 : 1) - s.r) / d.r : 0,\n      adj_g = d.g ? ((s.g < 0 ? 0 : 1) - s.g) / d.g : 0,\n      adj_b = d.b ? ((s.b < 0 ? 0 : 1) - s.b) / d.b : 0;\n\n  var adjust = Math.max(((adj_r > 1 || adj_r < 0) ? 0 : adj_r), ((adj_g > 1 || adj_g < 0) ? 0 : adj_g), ((adj_b > 1 || adj_b < 0) ? 0 : adj_b));\n\n  // Shift proportionally\n  s.r = s.r + (adjust * d.r);\n  s.g = s.g + (adjust * d.g);\n  s.b = s.b + (adjust * d.b);\n\n  // Apply gamma and clamp simulated color\n  function z(e) {\n    return 255 * (e <= 0 ? 0 : (e >= 1 ? 1 : Math.pow(e, 1 / gamma)));\n  }\n\n  return [Math.round(z(s.r)), Math.round(z(s.g)), Math.round(z(s.b))];\n}\n\n// Convert RGB to XYZ color space\nfunction rgb2xyz(obj) {\n  obj.x = (0.430574 * obj.r + 0.341550 * obj.g + 0.178325 * obj.b);\n  obj.y = (0.222015 * obj.r + 0.706655 * obj.g + 0.071330 * obj.b);\n  obj.z = (0.020183 * obj.r + 0.129553 * obj.g + 0.939180 * obj.b);\n\n  return obj;\n}\n\n// Convert XYZ to RGB color space\nfunction xyz2rgb(obj) {\n  obj.r = (3.063218 * obj.x - 1.393325 * obj.y - 0.475802 * obj.z);\n  obj.g = (-0.969243 * obj.x + 1.875966 * obj.y + 0.041555 * obj.z);\n  obj.b = (0.067871 * obj.x - 0.228834 * obj.y + 1.069251 * obj.z);\n\n  return obj;\n}\n\n// If long-wavelength cones (L-cones) is defective\nfunction anomylize(a, b) {\n  var v = 1.75,\n      d = v * 1 + 1;\n\n  return [(v * b[0] + a[0] * 1) / d, (v * b[1] + a[1] * 1) / d, (v * b[2] + a[2] * 1) / d];\n}\n\n// Convert to monochrome\nfunction monochrome(rgb) {\n  var z = Math.round(rgb[0] * .299 + rgb[1] * .587 + rgb[2] * .114);\n\n  return [z, z, z];\n}\n\n// Get single items\nfunction getItems(collection) {\n  var out = [];\n\n  for (var i = 0, len = collection.length; i < len; i++) {\n    var item = collection[i];\n    if (item.pageItems && item.pageItems.length) {\n      out = [].concat(out, getItems(item.pageItems));\n    } else if (/compound/i.test(item.typename) && item.pathItems.length) {\n      out = [].concat(out, getItems(item.pathItems));\n    } else if (/pathitem|text/i.test(item.typename)) {\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n\n// Check if the object has color\nfunction hasColor(item, attr) {\n  if (!isText(item) && /fill/i.test(attr) && !item.filled )\n    return false;\n  if (!isText(item) && /stroke/i.test(attr) && !item.stroked)\n    return false;\n\n  if(isText(item)) item = item.characters[0].characterAttributes;\n  \n  var type = item[attr].typename;\n\n  if (/rgb|cmyk|gray|spot|gradient/i.test(type))\n    return true;\n\n  return false;\n}\n\n// Does the array contain TextFrame\nfunction isContainsText(collection) {\n  for (var i = 0, len = collection.length; i < len; i++) {\n    if (/text/i.test(collection[i].typename)) return true;\n  }\n  return false;\n}\n\n// Check the TextFrame\nfunction isText(item) {\n  return (/text/i.test(item.typename));\n}\n\n// Change the original color to the simulated color\nfunction recolor(item, attr, func) {\n  var isRgb = activeDocument.documentColorSpace == DocumentColorSpace.RGB,\n      fill = item[attr],\n      c = {}; // Color\n\n  if (/gradient/i.test(fill)) { // Gradient color\n    for (i = 0, len = fill.gradient.gradientStops.length; i < len; i++) {\n      var gStop = fill.gradient.gradientStops[i];\n      c = setBlindColor(gStop.color, func);\n      gStop.color = c;\n      c = {};\n    }\n  } else { // Solid color\n    c = setBlindColor(fill, func);\n    item[attr] = c;\n  }\n\n  // Calc\n  function setBlindColor(src, func) {\n    var c = getOriginalColor(src, isRgb),\n        rgb = [], cmyk = [];\n\n    if (isRgb) {\n      rgb = func([c.red, c.green, c.blue]); // Simulate\n    } else {\n      rgb = cmyk2rgb([c.cyan, c.magenta, c.yellow, c.black]);\n      rgb = func(rgb); // Simulate\n      cmyk = rgb2cmyk(rgb);\n    }\n    return isRgb ? setRGBColor(rgb) : setCMYKColor(cmyk);\n  }\n}\n\n// Get single color\nfunction getOriginalColor(c, isRgb) {\n  var nc = {}; // New color\n  switch (c.typename) {\n    case 'SpotColor':\n      if (c.tint === 100) {\n        return getOriginalColor(c.spot.color, isRgb);\n      } else {\n        var s = getOriginalColor(c.spot.color, isRgb);\n        var raw = isRgb ? [s.red, s.green, s.blue] : cmyk2rgb([s.cyan, s.magenta, s.yellow, s.black]);\n        raw = lerp(raw, [255, 255, 255], 1 - c.tint / 100);\n        nc = isRgb ? setRGBColor(raw) : setCMYKColor(rgb2cmyk(raw));\n        return nc;\n      }\n    case 'GrayColor':\n      if (isRgb) {\n        var raw = gray2rgb(c.gray);\n        nc = setRGBColor(raw);\n      } else {\n        nc = setCMYKColor([0, 0, 0, c.gray]);\n      }\n      return nc;\n    default:\n      return c;\n  }\n}\n\n// Linear interpolation\nfunction lerp(from, to, value) {\n  var out = [];\n  for (var i = 0; i < from.length; i++) {\n    out.push(from[i] + (to[i] - from[i]) * value);\n  }\n  return out;\n}\n\n// Convert CMYK to RGB color space\nfunction cmyk2rgb(cmyk) {\n  return convertColor('CMYK', 'RGB', cmyk);\n}\n\n// Convert RGB to CMYK color space\nfunction rgb2cmyk(rgb) {\n  return convertColor('RGB', 'CMYK', rgb);\n}\n\n// Convert GrayScale to RGB color space\nfunction gray2rgb(gray) {\n  return convertColor('GrayScale', 'RGB', [gray]);\n}\n\n// Convert color via native converter\nfunction convertColor(src, dest, srcColor) {\n  return app.convertSampleColor(ImageColorSpace[src], srcColor, ImageColorSpace[dest], ColorConvertPurpose.defaultpurpose);\n}\n\n// Generate solid RGB color\nfunction setRGBColor(rgb) {\n  var c = new RGBColor();\n  c.red = rgb[0];\n  c.green = rgb[1];\n  c.blue = rgb[2];\n  return c;\n}\n\n// Generate solid CMYK color\nfunction setCMYKColor(cmyk) {\n  var c = new CMYKColor();\n  c.cyan = cmyk[0];\n  c.magenta = cmyk[1];\n  c.yellow = cmyk[2];\n  c.black = cmyk[3];\n  return c;\n}\n\n// Open link in browser\nfunction openURL(url) {\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\n  html.open('w');\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\n  html.write(htmlBody);\n  html.close();\n  html.execute();\n}\n\n// Run script\ntry {\n  main();\n} catch (e) {}```\n"})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},4525:(n,e,t)=>{t.d(e,{A:()=>o});const o=t.p+"assets/images/ColorBlindSimulator-7399bcb49b87d4c5bd8f762e36fefae7.gif"},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var o=t(6540);const r={},i=o.createContext(r);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);