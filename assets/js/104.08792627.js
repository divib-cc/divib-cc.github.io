"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[104],{104:(t,e,n)=>{n.r(e),n.d(e,{CabalLoader:()=>a});var s=n(4922),i=n(7924),o=n(9070);class a{mixers=[];actions=[];currentActionIndex=0;constructor(t){if(this.scene=t,this.clock=new s.zD7,"undefined"!=typeof window){this.gui=new i.cL;const t=document.querySelector(".dg.main");t&&(t.style.position="absolute",t.style.top="100px")}}async loadModel(t){const e=this.parseMaterials(t.materials_and_textures),n=this.parseSkeleton(t.skeleton),i=this.parseGeometry(t.geometry,e,n);if(i.length>0&&i[0]instanceof s.I46){const e=i[0],{mixer:s,actions:o}=this.parseAnimations(t.animations,e,n);this.mixers.push(s),this.actions=o,o[0]&&o[0].play()}this.scene.add(...i),this.setupGUI()}setupGUI(){const t={};this.actions.forEach(((e,n)=>{t[`Action ${n+1}`]=n})),this.gui.add(this,"currentActionIndex",t).name("Action").onChange((t=>{this.currentActionIndex=t,this.updateAction()}))}updateAction(){const t=this.actions[this.currentActionIndex];t&&(this.actions.forEach((t=>t.stop())),t.play())}parseSkeleton(t){const e=[],n=[];return t.bones.forEach(((t,i)=>{const o=new s.$Kf;o.name=t.id.text;const a=r(t.bone_space_matrix.col),c=r(t.parent_bone_space_matrix.col);if(n.push(c.invert()),o.matrix.copy(a),o.matrix.decompose(o.position,o.quaternion,o.scale),-1!==t.parent_bone_index){e[t.parent_bone_index].add(o)}e.push(o)})),new s.EAD(e,n)}parseGeometry(t,e,n){return t.meshes.map((t=>{const i=this.ebm_read_mesh(t),o=(t.root_bone_id,t.world_matrix,t.local_matrix,e[t.material_index]);if(t.influences){const{skinIndices:e,skinWeights:a}=this.calculateSkinData(t.influences);i.setAttribute("skinIndex",new s.A$4(e.flat(),4)),i.setAttribute("skinWeight",new s.qtW(a.flat(),4));const r=new s.I46(i,o);return r.add(n.bones[0]),r.bind(n),r.name=t.id.text,this.scene.add(new s._xc(r)),r}{const e=new s.eaF(i,o);return e.name=t.id.text,e}}))}calculateSkinData(t){const e=[],n=[];return t.forEach(((t,s)=>{t.influence_for_bone.forEach(((t,s)=>{t.vertex_index.forEach(((i,o)=>{e[i]||(e[i]=[s,s+1,0,0],n[i]=[1-t.weight[o],t.weight[o],0,0])}))}))})),n.forEach(((t,e)=>{const s=t.reduce(((t,e)=>t+e),0);s>0&&(n[e]=t.map((t=>t/s)))})),{skinIndices:e,skinWeights:n}}ebm_read_mesh(t){const e=[],n=[],i=[],o=[];t.vertices.forEach((t=>{e.push(t.position.x,t.position.y,t.position.z),n.push(t.normal.x,t.normal.y,t.normal.z),i.push(t.uv.x,t.uv.y)})),t.faces.forEach((t=>{o.push(t.vert1,t.vert2,t.vert3)}));const a=new s.LoY;return a.setAttribute("position",new s.qtW(e,3)),a.setAttribute("normal",new s.qtW(n,3)),a.setAttribute("uv",new s.qtW(i,2)),a.setIndex(o),a}parseMaterials(t){return t.materials.map((t=>{const e=this.ebm_read_material(t),n=this.ebm_read_texture(t);return e.map=n,e.needsUpdate=!0,e}))}ebm_read_material(t){const{ambient:e,diffuse:n,specular:i,emissive:o,power:a}=t.material_properties;return new s.V9B({color:new s.Q1f(n.r,n.g,n.b),opacity:n.a,transparent:n.a<1,side:s.$EB})}ebm_read_texture(t){const{texture:e}=t,n=new o.T,s=new Uint8Array(e.data.data),i=new Blob([s],{type:"image/dds"}),a=URL.createObjectURL(i),r=n.load(a,(()=>{URL.revokeObjectURL(a)}));return r.name=e.id.text,r}parseAnimations(t,e,n){const{count:i,animations:o}=t,a=[],r=new s.Iw4(e);return o.forEach((t=>{const e=[];t.transformations.forEach((t=>{const i=n.bones.find((e=>e.name===t.id.text));if(i){if(t.translations.length>0){const n=[],o=[];t.translations.forEach((t=>{n.push(t.keyframe_second),o.push(t.position.x,t.position.y,t.position.z)}));const a=new s.RiT(`.bones[${i.name}].position`,n,o);e.push(a)}if(t.rotations.length>0){const n=[],o=[];t.rotations.forEach((t=>{n.push(t.keyframe_second),o.push(t.position.x,t.position.y,t.position.z,t.position.w)}));const a=new s.MBL(`.bones[${i.name}].quaternion`,n,o);e.push(a)}}}));const i=new s.tz3(t.id.text,-1,e),o=r.clipAction(i);a.push(o)})),{mixer:r,actions:a}}update(){const t=this.clock.getDelta();this.mixers.forEach((e=>e.update(t)))}}function r(t){return(new s.kn4).fromArray(t.flatMap((t=>t.row)))}}}]);